---

- name: Debconf
  debconf:
    name: 'slapd'
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  with_items: "{{ openldap_debconfs }}"

- name: Install Apt Packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - "slapd"
    - "ldap-utils"
    - "libsasl2-dev"
    - "python-dev"
    - "libldap2-dev"
    - "libssl-dev"
    - "python-pip"

- name: Install python modules
  pip:
    name: "{{ item }}"
  with_items:
    - "python-ldap"
    - "ssh-ldap-pubkey"

#- name: Generate the root password for ldap
#  shell: "slappasswd -s {{ openldap_slapd_admin_rootpw }}"
#  register: root_password

- name: Template ldap.conf
  template:
    src: "ldap.conf"
    dest: "/etc/ldap/ldap.conf"
    mode: "0754"
    backup: yes

- name: Template ldif list
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0754"
    backup: yes
  with_items: "{{ openldap_ldif_list }}"

- name: Template schema list
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0754"
    backup: yes
  with_items: "{{ openldap_schema_list }}"

#- name: dpkg reconfigure
#  command: "dpkg-reconfigure -f noninteractive slapd"

- name: Ensure schemas added before ldifs added
  shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f {{ item.dest }} && touch {{ item.creates }}"
  args:
    creates: "{{ item.creates }}"
  with_items: "{{ openldap_schema_list }}"

- name: Ensure ldifs added
  register: ldifs_added_registration
  shell: "ldapadd -x -D {{ openldap_slapd_admin }} -w {{ openldap_slapd_admin_rootpw }} -f {{ item.dest }} && touch {{ item.creates }}"
  args:
    creates: "{{ item.creates }}"
  with_items: "{{ openldap_ldif_list }}"
  failed_when: "ldifs_added_registration.rc > 0 and 'Already exists' not in ldifs_added_registration.stderr"

# replication tasks

- name: Include repl tasks
  include_tasks: "{{ openldap_nodetype }}.yml"

#- name: Delete the configuration directory
#  file: path="/etc/ldap/slapd.d" state=absent
#
#- name: Generate new config
#  command: "slaptest -f /etc/ldap/slapd.conf -F /etc/ldap/slapd.d/"
#
#- name: Ensure ldap directory owned by ldap
#  file:
#    dest: "/etc/ldap/slapd.d"
#    state: directory
#    owner: openldap
#    group: openldap
#    recurse: yes
#
#- name: restart slapd
#  service: name=slapd state=restarted
